{"ast":null,"code":"/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\nfunction variants(variants) {\n  let obj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT('/\\\\*\\\\*', '\\\\*/', {\n    relevance: 0,\n    contains: [{\n      // eat up @'s in emails to prevent them to be recognized as doctags\n      begin: /\\w+@/,\n      relevance: 0\n    }, {\n      className: 'doctag',\n      begin: '@[A-Za-z]+'\n    }]\n  })]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  const NUMBER = variants([hljs.BINARY_NUMBER_MODE, hljs.C_NUMBER_MODE]);\n  const STRING = variants([{\n    begin: /\"\"\"/,\n    end: /\"\"\"/\n  }, {\n    begin: /'''/,\n    end: /'''/\n  }, {\n    begin: \"\\\\$/\",\n    end: \"/\\\\$\",\n    relevance: 10\n  }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE], {\n    className: \"string\"\n  });\n  const CLASS_DEFINITION = {\n    match: [/(class|interface|trait|enum|extends|implements)/, /\\s+/, hljs.UNDERSCORE_IDENT_RE],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\"\n    }\n  };\n  const TYPES = [\"byte\", \"short\", \"char\", \"int\", \"long\", \"boolean\", \"float\", \"double\", \"void\"];\n  const KEYWORDS = [// groovy specific keywords\n  \"def\", \"as\", \"in\", \"assert\", \"trait\", // common keywords with Java\n  \"abstract\", \"static\", \"volatile\", \"transient\", \"public\", \"private\", \"protected\", \"synchronized\", \"final\", \"class\", \"interface\", \"enum\", \"if\", \"else\", \"for\", \"while\", \"switch\", \"case\", \"break\", \"default\", \"continue\", \"throw\", \"throws\", \"try\", \"catch\", \"finally\", \"implements\", \"extends\", \"new\", \"import\", \"package\", \"return\", \"instanceof\"];\n  return {\n    name: 'Groovy',\n    keywords: {\n      \"variable.language\": 'this super',\n      literal: 'true false null',\n      type: TYPES,\n      keyword: KEYWORDS\n    },\n    contains: [hljs.SHEBANG({\n      binary: \"groovy\",\n      relevance: 10\n    }), COMMENT, STRING, REGEXP, NUMBER, CLASS_DEFINITION, {\n      className: 'meta',\n      begin: '@[A-Za-z]+',\n      relevance: 0\n    }, {\n      // highlight map keys and named parameters as attrs\n      className: 'attr',\n      begin: IDENT_RE + '[ \\t]*:',\n      relevance: 0\n    }, {\n      // catch middle element of the ternary operator\n      // to avoid highlight it as a label, named parameter, or map key\n      begin: /\\?/,\n      end: /:/,\n      relevance: 0,\n      contains: [COMMENT, STRING, REGEXP, NUMBER, 'self']\n    }, {\n      // highlight labeled statements\n      className: 'symbol',\n      begin: '^[ \\t]*' + regex.lookahead(IDENT_RE + ':'),\n      excludeBegin: true,\n      end: IDENT_RE + ':',\n      relevance: 0\n    }],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;","map":{"version":3,"sources":["C:/Users/Rennud/node_modules/highlight.js/lib/languages/groovy.js"],"names":["variants","obj","groovy","hljs","regex","IDENT_RE","COMMENT","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","relevance","contains","begin","className","REGEXP","BACKSLASH_ESCAPE","NUMBER","BINARY_NUMBER_MODE","C_NUMBER_MODE","STRING","end","APOS_STRING_MODE","QUOTE_STRING_MODE","CLASS_DEFINITION","match","UNDERSCORE_IDENT_RE","scope","TYPES","KEYWORDS","name","keywords","literal","type","keyword","SHEBANG","binary","lookahead","excludeBegin","illegal","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,CAAkBA,QAAlB,EAAsC;AAAA,MAAVC,GAAU,uEAAJ,EAAI;AACpCA,EAAAA,GAAG,CAACD,QAAJ,GAAeA,QAAf;AACA,SAAOC,GAAP;AACD;;AAED,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,QAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACA,QAAMC,QAAQ,GAAG,gBAAjB;AACA,QAAMC,OAAO,GAAGN,QAAQ,CAAC,CACvBG,IAAI,CAACI,mBADkB,EAEvBJ,IAAI,CAACK,oBAFkB,EAGvBL,IAAI,CAACG,OAAL,CACE,SADF,EAEE,MAFF,EAGE;AACEG,IAAAA,SAAS,EAAE,CADb;AAEEC,IAAAA,QAAQ,EAAE,CACR;AACE;AACAC,MAAAA,KAAK,EAAE,MAFT;AAGEF,MAAAA,SAAS,EAAE;AAHb,KADQ,EAMR;AACEG,MAAAA,SAAS,EAAE,QADb;AAEED,MAAAA,KAAK,EAAE;AAFT,KANQ;AAFZ,GAHF,CAHuB,CAAD,CAAxB;AAsBA,QAAME,MAAM,GAAG;AACbD,IAAAA,SAAS,EAAE,QADE;AAEbD,IAAAA,KAAK,EAAE,gBAFM;AAGbD,IAAAA,QAAQ,EAAE,CAAEP,IAAI,CAACW,gBAAP;AAHG,GAAf;AAKA,QAAMC,MAAM,GAAGf,QAAQ,CAAC,CACtBG,IAAI,CAACa,kBADiB,EAEtBb,IAAI,CAACc,aAFiB,CAAD,CAAvB;AAIA,QAAMC,MAAM,GAAGlB,QAAQ,CAAC,CACtB;AACEW,IAAAA,KAAK,EAAE,KADT;AAEEQ,IAAAA,GAAG,EAAE;AAFP,GADsB,EAKtB;AACER,IAAAA,KAAK,EAAE,KADT;AAEEQ,IAAAA,GAAG,EAAE;AAFP,GALsB,EAStB;AACER,IAAAA,KAAK,EAAE,MADT;AAEEQ,IAAAA,GAAG,EAAE,MAFP;AAGEV,IAAAA,SAAS,EAAE;AAHb,GATsB,EActBN,IAAI,CAACiB,gBAdiB,EAetBjB,IAAI,CAACkB,iBAfiB,CAAD,EAiBvB;AAAET,IAAAA,SAAS,EAAE;AAAb,GAjBuB,CAAvB;AAoBA,QAAMU,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAE,CACL,iDADK,EAEL,KAFK,EAGLpB,IAAI,CAACqB,mBAHA,CADgB;AAMvBC,IAAAA,KAAK,EAAE;AACL,SAAG,SADE;AAEL,SAAG;AAFE;AANgB,GAAzB;AAWA,QAAMC,KAAK,GAAG,CACZ,MADY,EAEZ,OAFY,EAGZ,MAHY,EAIZ,KAJY,EAKZ,MALY,EAMZ,SANY,EAOZ,OAPY,EAQZ,QARY,EASZ,MATY,CAAd;AAWA,QAAMC,QAAQ,GAAG,CACf;AACA,OAFe,EAGf,IAHe,EAIf,IAJe,EAKf,QALe,EAMf,OANe,EAOf;AACA,YARe,EASf,QATe,EAUf,UAVe,EAWf,WAXe,EAYf,QAZe,EAaf,SAbe,EAcf,WAde,EAef,cAfe,EAgBf,OAhBe,EAiBf,OAjBe,EAkBf,WAlBe,EAmBf,MAnBe,EAoBf,IApBe,EAqBf,MArBe,EAsBf,KAtBe,EAuBf,OAvBe,EAwBf,QAxBe,EAyBf,MAzBe,EA0Bf,OA1Be,EA2Bf,SA3Be,EA4Bf,UA5Be,EA6Bf,OA7Be,EA8Bf,QA9Be,EA+Bf,KA/Be,EAgCf,OAhCe,EAiCf,SAjCe,EAkCf,YAlCe,EAmCf,SAnCe,EAoCf,KApCe,EAqCf,QArCe,EAsCf,SAtCe,EAuCf,QAvCe,EAwCf,YAxCe,CAAjB;AA2CA,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,QAAQ,EAAE;AACR,2BAAqB,YADb;AAERC,MAAAA,OAAO,EAAE,iBAFD;AAGRC,MAAAA,IAAI,EAAEL,KAHE;AAIRM,MAAAA,OAAO,EAAEL;AAJD,KAFL;AAQLjB,IAAAA,QAAQ,EAAE,CACRP,IAAI,CAAC8B,OAAL,CAAa;AACXC,MAAAA,MAAM,EAAE,QADG;AAEXzB,MAAAA,SAAS,EAAE;AAFA,KAAb,CADQ,EAKRH,OALQ,EAMRY,MANQ,EAORL,MAPQ,EAQRE,MARQ,EASRO,gBATQ,EAUR;AACEV,MAAAA,SAAS,EAAE,MADb;AAEED,MAAAA,KAAK,EAAE,YAFT;AAGEF,MAAAA,SAAS,EAAE;AAHb,KAVQ,EAeR;AACE;AACAG,MAAAA,SAAS,EAAE,MAFb;AAGED,MAAAA,KAAK,EAAEN,QAAQ,GAAG,SAHpB;AAIEI,MAAAA,SAAS,EAAE;AAJb,KAfQ,EAqBR;AACE;AACA;AACAE,MAAAA,KAAK,EAAE,IAHT;AAIEQ,MAAAA,GAAG,EAAE,GAJP;AAKEV,MAAAA,SAAS,EAAE,CALb;AAMEC,MAAAA,QAAQ,EAAE,CACRJ,OADQ,EAERY,MAFQ,EAGRL,MAHQ,EAIRE,MAJQ,EAKR,MALQ;AANZ,KArBQ,EAmCR;AACE;AACAH,MAAAA,SAAS,EAAE,QAFb;AAGED,MAAAA,KAAK,EAAE,YAAYP,KAAK,CAAC+B,SAAN,CAAgB9B,QAAQ,GAAG,GAA3B,CAHrB;AAIE+B,MAAAA,YAAY,EAAE,IAJhB;AAKEjB,MAAAA,GAAG,EAAEd,QAAQ,GAAG,GALlB;AAMEI,MAAAA,SAAS,EAAE;AANb,KAnCQ,CARL;AAoDL4B,IAAAA,OAAO,EAAE;AApDJ,GAAP;AAsDD;;AAEDC,MAAM,CAACC,OAAP,GAAiBrC,MAAjB","sourcesContent":["/*\n Language: Groovy\n Author: Guillaume Laforge <glaforge@gmail.com>\n Description: Groovy programming language implementation inspired from Vsevolod's Java mode\n Website: https://groovy-lang.org\n */\n\nfunction variants(variants, obj = {}) {\n  obj.variants = variants;\n  return obj;\n}\n\nfunction groovy(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = '[A-Za-z0-9_$]+';\n  const COMMENT = variants([\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.COMMENT(\n      '/\\\\*\\\\*',\n      '\\\\*/',\n      {\n        relevance: 0,\n        contains: [\n          {\n            // eat up @'s in emails to prevent them to be recognized as doctags\n            begin: /\\w+@/,\n            relevance: 0\n          },\n          {\n            className: 'doctag',\n            begin: '@[A-Za-z]+'\n          }\n        ]\n      }\n    )\n  ]);\n  const REGEXP = {\n    className: 'regexp',\n    begin: /~?\\/[^\\/\\n]+\\//,\n    contains: [ hljs.BACKSLASH_ESCAPE ]\n  };\n  const NUMBER = variants([\n    hljs.BINARY_NUMBER_MODE,\n    hljs.C_NUMBER_MODE\n  ]);\n  const STRING = variants([\n    {\n      begin: /\"\"\"/,\n      end: /\"\"\"/\n    },\n    {\n      begin: /'''/,\n      end: /'''/\n    },\n    {\n      begin: \"\\\\$/\",\n      end: \"/\\\\$\",\n      relevance: 10\n    },\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE\n  ],\n  { className: \"string\" }\n  );\n\n  const CLASS_DEFINITION = {\n    match: [\n      /(class|interface|trait|enum|extends|implements)/,\n      /\\s+/,\n      hljs.UNDERSCORE_IDENT_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.class\",\n    }\n  };\n  const TYPES = [\n    \"byte\",\n    \"short\",\n    \"char\",\n    \"int\",\n    \"long\",\n    \"boolean\",\n    \"float\",\n    \"double\",\n    \"void\"\n  ];\n  const KEYWORDS = [\n    // groovy specific keywords\n    \"def\",\n    \"as\",\n    \"in\",\n    \"assert\",\n    \"trait\",\n    // common keywords with Java\n    \"abstract\",\n    \"static\",\n    \"volatile\",\n    \"transient\",\n    \"public\",\n    \"private\",\n    \"protected\",\n    \"synchronized\",\n    \"final\",\n    \"class\",\n    \"interface\",\n    \"enum\",\n    \"if\",\n    \"else\",\n    \"for\",\n    \"while\",\n    \"switch\",\n    \"case\",\n    \"break\",\n    \"default\",\n    \"continue\",\n    \"throw\",\n    \"throws\",\n    \"try\",\n    \"catch\",\n    \"finally\",\n    \"implements\",\n    \"extends\",\n    \"new\",\n    \"import\",\n    \"package\",\n    \"return\",\n    \"instanceof\"\n  ];\n\n  return {\n    name: 'Groovy',\n    keywords: {\n      \"variable.language\": 'this super',\n      literal: 'true false null',\n      type: TYPES,\n      keyword: KEYWORDS\n    },\n    contains: [\n      hljs.SHEBANG({\n        binary: \"groovy\",\n        relevance: 10\n      }),\n      COMMENT,\n      STRING,\n      REGEXP,\n      NUMBER,\n      CLASS_DEFINITION,\n      {\n        className: 'meta',\n        begin: '@[A-Za-z]+',\n        relevance: 0\n      },\n      {\n        // highlight map keys and named parameters as attrs\n        className: 'attr',\n        begin: IDENT_RE + '[ \\t]*:',\n        relevance: 0\n      },\n      {\n        // catch middle element of the ternary operator\n        // to avoid highlight it as a label, named parameter, or map key\n        begin: /\\?/,\n        end: /:/,\n        relevance: 0,\n        contains: [\n          COMMENT,\n          STRING,\n          REGEXP,\n          NUMBER,\n          'self'\n        ]\n      },\n      {\n        // highlight labeled statements\n        className: 'symbol',\n        begin: '^[ \\t]*' + regex.lookahead(IDENT_RE + ':'),\n        excludeBegin: true,\n        end: IDENT_RE + ':',\n        relevance: 0\n      }\n    ],\n    illegal: /#|<\\//\n  };\n}\n\nmodule.exports = groovy;\n"]},"metadata":{},"sourceType":"script"}