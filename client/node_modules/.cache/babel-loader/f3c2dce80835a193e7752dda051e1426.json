{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rennud\\\\Desktop\\\\select_query_app\\\\client\\\\src\\\\Edtitor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Editor(props) {\n  _s();\n\n  const {\n    language,\n    displayName,\n    value,\n    onChange\n  } = props;\n  const [open, setOpen] = useState(true);\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `editor-container ${open ? \"\" : \"collapsed\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-title\",\n      children: [displayName, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"expand-collapse-btn\",\n        onClick: () => setOpen(prevOpen => !prevOpen)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlledEditor, {\n      value: value,\n      className: \"code-mirror-wrapper\",\n      options: {\n        lineWrapping: true,\n        mode: language,\n        theme: \"material\",\n        lineNumbers: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editor, \"dVkDIfRb5RN4FjtonjBYYwpg89o=\");\n\n_c = Editor;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"sources":["C:/Users/Rennud/Desktop/select_query_app/client/src/Edtitor.tsx"],"names":["React","useState","Controlled","ControlledEditor","Editor","props","language","displayName","value","onChange","open","setOpen","handleChange","editor","data","prevOpen","lineWrapping","mode","theme","lineNumbers"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,mBAA/C;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAKZ;AAAA;;AACD,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,WAAZ;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,MAA6CJ,KAAnD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;;AAEA,WAASW,YAAT,CAAsBC,MAAtB,EAAmCC,IAAnC,EAA8CN,KAA9C,EAA0D;AACxDC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAG,oBAAmBE,IAAI,GAAG,EAAH,GAAQ,WAAY,EAA5D;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,iBACGH,WADH,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,qBAFZ;AAGE,QAAA,OAAO,EAAE,MAAMI,OAAO,CAAEI,QAAD,IAAc,CAACA,QAAhB;AAHxB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,gBAAD;AACE,MAAA,KAAK,EAAEP,KADT;AAEE,MAAA,SAAS,EAAC,qBAFZ;AAGE,MAAA,OAAO,EAAE;AACPQ,QAAAA,YAAY,EAAE,IADP;AAEPC,QAAAA,IAAI,EAAEX,QAFC;AAGPY,QAAAA,KAAK,EAAE,UAHA;AAIPC,QAAAA,WAAW,EAAE;AAJN;AAHX;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAnCuBf,M;;KAAAA,M","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\n\r\nexport default function Editor(props: {\r\n  language: any;\r\n  displayName: any;\r\n  value: any;\r\n  onChange: any;\r\n}) {\r\n  const { language, displayName, value, onChange } = props;\r\n  const [open, setOpen] = useState(true);\r\n\r\n  function handleChange(editor: any, data: any, value: any) {\r\n    onChange(value);\r\n  }\r\n\r\n  return (\r\n    <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n      <div className=\"editor-title\">\r\n        {displayName}\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n        ></button>\r\n      </div>\r\n      <ControlledEditor\r\n        value={value}\r\n        className=\"code-mirror-wrapper\"\r\n        options={{\r\n          lineWrapping: true,\r\n          mode: language,\r\n          theme: \"material\",\r\n          lineNumbers: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}