{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rennud\\\\Desktop\\\\select_query_app\\\\client\\\\src\\\\CodeEditor.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Prism from \"prismjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = props => {\n  _s();\n\n  const [content, setContent] = useState(props.content);\n  useEffect(() => {\n    Prism.highlightAll();\n  }, [props.language, content]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"code-edit-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"code-input\",\n      value: content,\n      onChange: evt => setContent(evt.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      className: \"code-output\",\n      children: /*#__PURE__*/_jsxDEV(\"code\", {\n        className: `language-${props.language}`,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CodeEditor, \"EP9+P9jWrkWD3MCQURCiZjgsMjY=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/Rennud/Desktop/select_query_app/client/src/CodeEditor.tsx"],"names":["React","useState","useEffect","Prism","CodeEditor","props","content","setContent","highlightAll","language","evt","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAA4C;AAAA;;AAC7D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAACI,KAAK,CAACC,OAAP,CAAtC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACK,YAAN;AACD,GAFQ,EAEN,CAACH,KAAK,CAACI,QAAP,EAAiBH,OAAjB,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,KAAK,EAAEA,OAFT;AAGE,MAAA,QAAQ,EAAGI,GAAD,IAASH,UAAU,CAACG,GAAG,CAACC,MAAJ,CAAWC,KAAZ;AAH/B;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAG,YAAWP,KAAK,CAACI,QAAS,EAA5C;AAAA,kBAAgDH;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnBD;;GAAMF,U;;KAAAA,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Prism from \"prismjs\";\r\n\r\nconst CodeEditor = (props: { content: any; language: any }) => {\r\n  const [content, setContent] = useState(props.content);\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, [props.language, content]);\r\n\r\n  return (\r\n    <div className=\"code-edit-container\">\r\n      <textarea\r\n        className=\"code-input\"\r\n        value={content}\r\n        onChange={(evt) => setContent(evt.target.value)}\r\n      />\r\n      <pre className=\"code-output\">\r\n        <code className={`language-${props.language}`}>{content}</code>\r\n      </pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}