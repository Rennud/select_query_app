{"ast":null,"code":"/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)'; // TODO: move concepts like CAMEL_CASE into `modes.js`\n\n  const CLASS_NAME_RE = regex.either(/\\b([A-Z]+[a-z0-9]+)+/, // ends in caps\n  /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/);\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\"__FILE__\", \"__LINE__\"],\n    \"variable.language\": [\"self\", \"super\"],\n    keyword: [\"alias\", \"and\", \"attr_accessor\", \"attr_reader\", \"attr_writer\", \"begin\", \"BEGIN\", \"break\", \"case\", \"class\", \"defined\", \"do\", \"else\", \"elsif\", \"end\", \"END\", \"ensure\", \"for\", \"if\", \"in\", \"include\", \"module\", \"next\", \"not\", \"or\", \"redo\", \"require\", \"rescue\", \"retry\", \"return\", \"then\", \"undef\", \"unless\", \"until\", \"when\", \"while\", \"yield\"],\n    built_in: [\"proc\", \"lambda\"],\n    literal: [\"true\", \"false\", \"nil\"]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [hljs.COMMENT('#', '$', {\n    contains: [YARDOCTAG]\n  }), hljs.COMMENT('^=begin', '^=end', {\n    contains: [YARDOCTAG],\n    relevance: 10\n  }), hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n    variants: [{\n      begin: /'/,\n      end: /'/\n    }, {\n      begin: /\"/,\n      end: /\"/\n    }, {\n      begin: /`/,\n      end: /`/\n    }, {\n      begin: /%[qQwWx]?\\(/,\n      end: /\\)/\n    }, {\n      begin: /%[qQwWx]?\\[/,\n      end: /\\]/\n    }, {\n      begin: /%[qQwWx]?\\{/,\n      end: /\\}/\n    }, {\n      begin: /%[qQwWx]?</,\n      end: />/\n    }, {\n      begin: /%[qQwWx]?\\//,\n      end: /\\//\n    }, {\n      begin: /%[qQwWx]?%/,\n      end: /%/\n    }, {\n      begin: /%[qQwWx]?-/,\n      end: /-/\n    }, {\n      begin: /%[qQwWx]?\\|/,\n      end: /\\|/\n    }, // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n    // where ? is the last character of a preceding identifier, as in: `func?4`\n    {\n      begin: /\\B\\?(\\\\\\d{1,3})/\n    }, {\n      begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/\n    }, {\n      begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/\n    }, {\n      begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/\n    }, {\n      begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/\n    }, {\n      begin: /\\B\\?\\\\?\\S/\n    }, // heredocs\n    {\n      // this guard makes sure that we have an entire heredoc and not a false\n      // positive (auto-detect, etc.)\n      begin: regex.concat(/<<[-~]?'?/, regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)),\n      contains: [hljs.END_SAME_AS_BEGIN({\n        begin: /(\\w+)/,\n        end: /(\\w+)/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      })]\n    }]\n  }; // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [// decimal integer/float, optionally exponential or rational, optionally imaginary\n    {\n      begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b`\n    }, // explicit decimal/binary/octal/hexadecimal integer,\n    // optionally rational and/or imaginary\n    {\n      begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\"\n    }, {\n      begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\"\n    }, // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n    {\n      begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\"\n    }]\n  };\n  const PARAMS = {\n    variants: [{\n      match: /\\(\\)/\n    }, {\n      className: 'params',\n      begin: /\\(/,\n      end: /(?=\\))/,\n      excludeBegin: true,\n      endsParent: true,\n      keywords: RUBY_KEYWORDS\n    }]\n  };\n  const CLASS_DEFINITION = {\n    variants: [{\n      match: [/class\\s+/, CLASS_NAME_WITH_NAMESPACE_RE, /\\s+<\\s+/, CLASS_NAME_WITH_NAMESPACE_RE]\n    }, {\n      match: [/class\\s+/, CLASS_NAME_WITH_NAMESPACE_RE]\n    }],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n  const METHOD_DEFINITION = {\n    match: [/def/, /\\s+/, RUBY_METHOD_RE],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [PARAMS]\n  };\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [CLASS_NAME_WITH_NAMESPACE_RE, /\\.new[ (]/],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n  const RUBY_DEFAULT_CONTAINS = [STRING, CLASS_DEFINITION, OBJECT_CREATION, UPPER_CASE_CONSTANT, METHOD_DEFINITION, {\n    // swallow namespace qualifiers before symbols\n    begin: hljs.IDENT_RE + '::'\n  }, {\n    className: 'symbol',\n    begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n    relevance: 0\n  }, {\n    className: 'symbol',\n    begin: ':(?!\\\\s)',\n    contains: [STRING, {\n      begin: RUBY_METHOD_RE\n    }],\n    relevance: 0\n  }, NUMBER, {\n    // negative-look forward attempts to prevent false matches like:\n    // @ident@ or $ident$ that might indicate this is not ruby at all\n    className: \"variable\",\n    begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n  }, {\n    className: 'params',\n    begin: /\\|/,\n    end: /\\|/,\n    excludeBegin: true,\n    excludeEnd: true,\n    relevance: 0,\n    // this could be a lot of things (in other languages) other than params\n    keywords: RUBY_KEYWORDS\n  }, {\n    // regexp container\n    begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n    keywords: 'unless',\n    contains: [{\n      className: 'regexp',\n      contains: [hljs.BACKSLASH_ESCAPE, SUBST],\n      illegal: /\\n/,\n      variants: [{\n        begin: '/',\n        end: '/[a-z]*'\n      }, {\n        begin: /%r\\{/,\n        end: /\\}[a-z]*/\n      }, {\n        begin: '%r\\\\(',\n        end: '\\\\)[a-z]*'\n      }, {\n        begin: '%r!',\n        end: '![a-z]*'\n      }, {\n        begin: '%r\\\\[',\n        end: '\\\\][a-z]*'\n      }]\n    }].concat(IRB_OBJECT, COMMENT_MODES),\n    relevance: 0\n  }].concat(IRB_OBJECT, COMMENT_MODES);\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS; // >>\n  // ?>\n\n  const SIMPLE_PROMPT = \"[>?]>\"; // irb(main):001:0>\n\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n  const IRB_DEFAULT = [{\n    begin: /^\\s*=>/,\n    starts: {\n      end: '$',\n      contains: RUBY_DEFAULT_CONTAINS\n    }\n  }, {\n    className: 'meta.prompt',\n    begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n    starts: {\n      end: '$',\n      keywords: RUBY_KEYWORDS,\n      contains: RUBY_DEFAULT_CONTAINS\n    }\n  }];\n  COMMENT_MODES.unshift(IRB_OBJECT);\n  return {\n    name: 'Ruby',\n    aliases: ['rb', 'gemspec', 'podspec', 'thor', 'irb'],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [hljs.SHEBANG({\n      binary: \"ruby\"\n    })].concat(IRB_DEFAULT).concat(COMMENT_MODES).concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;","map":{"version":3,"sources":["C:/Users/Rennud/Desktop/select_query_app/client/node_modules/highlight.js/lib/languages/ruby.js"],"names":["ruby","hljs","regex","RUBY_METHOD_RE","CLASS_NAME_RE","either","CLASS_NAME_WITH_NAMESPACE_RE","concat","RUBY_KEYWORDS","keyword","built_in","literal","YARDOCTAG","className","begin","IRB_OBJECT","end","COMMENT_MODES","COMMENT","contains","relevance","MATCH_NOTHING_RE","SUBST","keywords","STRING","BACKSLASH_ESCAPE","variants","lookahead","END_SAME_AS_BEGIN","decimal","digits","NUMBER","PARAMS","match","excludeBegin","endsParent","CLASS_DEFINITION","scope","UPPER_CASE_CONSTANT","METHOD_DEFINITION","OBJECT_CREATION","RUBY_DEFAULT_CONTAINS","IDENT_RE","UNDERSCORE_IDENT_RE","excludeEnd","RE_STARTERS_RE","illegal","SIMPLE_PROMPT","DEFAULT_PROMPT","RVM_PROMPT","IRB_DEFAULT","starts","unshift","name","aliases","SHEBANG","binary","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Ruby\nDescription: Ruby is a dynamic, open source programming language with a focus on simplicity and productivity.\nWebsite: https://www.ruby-lang.org/\nAuthor: Anton Kovalyov <anton@kovalyov.net>\nContributors: Peter Leonov <gojpeg@yandex.ru>, Vasily Polovnyov <vast@whiteants.net>, Loren Segal <lsegal@soen.ca>, Pascal Hurni <phi@ruby-reactive.org>, Cedric Sohrauer <sohrauer@googlemail.com>\nCategory: common\n*/\n\nfunction ruby(hljs) {\n  const regex = hljs.regex;\n  const RUBY_METHOD_RE = '([a-zA-Z_]\\\\w*[!?=]?|[-+~]@|<<|>>|=~|===?|<=>|[<>]=?|\\\\*\\\\*|[-/+%^&*~`|]|\\\\[\\\\]=?)';\n  // TODO: move concepts like CAMEL_CASE into `modes.js`\n  const CLASS_NAME_RE = regex.either(\n    /\\b([A-Z]+[a-z0-9]+)+/,\n    // ends in caps\n    /\\b([A-Z]+[a-z0-9]+)+[A-Z]+/,\n  )\n  ;\n  const CLASS_NAME_WITH_NAMESPACE_RE = regex.concat(CLASS_NAME_RE, /(::\\w+)*/);\n  const RUBY_KEYWORDS = {\n    \"variable.constant\": [\n      \"__FILE__\",\n      \"__LINE__\"\n    ],\n    \"variable.language\": [\n      \"self\",\n      \"super\",\n    ],\n    keyword: [\n      \"alias\",\n      \"and\",\n      \"attr_accessor\",\n      \"attr_reader\",\n      \"attr_writer\",\n      \"begin\",\n      \"BEGIN\",\n      \"break\",\n      \"case\",\n      \"class\",\n      \"defined\",\n      \"do\",\n      \"else\",\n      \"elsif\",\n      \"end\",\n      \"END\",\n      \"ensure\",\n      \"for\",\n      \"if\",\n      \"in\",\n      \"include\",\n      \"module\",\n      \"next\",\n      \"not\",\n      \"or\",\n      \"redo\",\n      \"require\",\n      \"rescue\",\n      \"retry\",\n      \"return\",\n      \"then\",\n      \"undef\",\n      \"unless\",\n      \"until\",\n      \"when\",\n      \"while\",\n      \"yield\",\n    ],\n    built_in: [\n      \"proc\",\n      \"lambda\"\n    ],\n    literal: [\n      \"true\",\n      \"false\",\n      \"nil\"\n    ]\n  };\n  const YARDOCTAG = {\n    className: 'doctag',\n    begin: '@[A-Za-z]+'\n  };\n  const IRB_OBJECT = {\n    begin: '#<',\n    end: '>'\n  };\n  const COMMENT_MODES = [\n    hljs.COMMENT(\n      '#',\n      '$',\n      { contains: [ YARDOCTAG ] }\n    ),\n    hljs.COMMENT(\n      '^=begin',\n      '^=end',\n      {\n        contains: [ YARDOCTAG ],\n        relevance: 10\n      }\n    ),\n    hljs.COMMENT('^__END__', hljs.MATCH_NOTHING_RE)\n  ];\n  const SUBST = {\n    className: 'subst',\n    begin: /#\\{/,\n    end: /\\}/,\n    keywords: RUBY_KEYWORDS\n  };\n  const STRING = {\n    className: 'string',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ],\n    variants: [\n      {\n        begin: /'/,\n        end: /'/\n      },\n      {\n        begin: /\"/,\n        end: /\"/\n      },\n      {\n        begin: /`/,\n        end: /`/\n      },\n      {\n        begin: /%[qQwWx]?\\(/,\n        end: /\\)/\n      },\n      {\n        begin: /%[qQwWx]?\\[/,\n        end: /\\]/\n      },\n      {\n        begin: /%[qQwWx]?\\{/,\n        end: /\\}/\n      },\n      {\n        begin: /%[qQwWx]?</,\n        end: />/\n      },\n      {\n        begin: /%[qQwWx]?\\//,\n        end: /\\//\n      },\n      {\n        begin: /%[qQwWx]?%/,\n        end: /%/\n      },\n      {\n        begin: /%[qQwWx]?-/,\n        end: /-/\n      },\n      {\n        begin: /%[qQwWx]?\\|/,\n        end: /\\|/\n      },\n      // in the following expressions, \\B in the beginning suppresses recognition of ?-sequences\n      // where ? is the last character of a preceding identifier, as in: `func?4`\n      { begin: /\\B\\?(\\\\\\d{1,3})/ },\n      { begin: /\\B\\?(\\\\x[A-Fa-f0-9]{1,2})/ },\n      { begin: /\\B\\?(\\\\u\\{?[A-Fa-f0-9]{1,6}\\}?)/ },\n      { begin: /\\B\\?(\\\\M-\\\\C-|\\\\M-\\\\c|\\\\c\\\\M-|\\\\M-|\\\\C-\\\\M-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\(c|C-)[\\x20-\\x7e]/ },\n      { begin: /\\B\\?\\\\?\\S/ },\n      // heredocs\n      {\n        // this guard makes sure that we have an entire heredoc and not a false\n        // positive (auto-detect, etc.)\n        begin: regex.concat(\n          /<<[-~]?'?/,\n          regex.lookahead(/(\\w+)(?=\\W)[^\\n]*\\n(?:[^\\n]*\\n)*?\\s*\\1\\b/)\n        ),\n        contains: [\n          hljs.END_SAME_AS_BEGIN({\n            begin: /(\\w+)/,\n            end: /(\\w+)/,\n            contains: [\n              hljs.BACKSLASH_ESCAPE,\n              SUBST\n            ]\n          })\n        ]\n      }\n    ]\n  };\n\n  // Ruby syntax is underdocumented, but this grammar seems to be accurate\n  // as of version 2.7.2 (confirmed with (irb and `Ripper.sexp(...)`)\n  // https://docs.ruby-lang.org/en/2.7.0/doc/syntax/literals_rdoc.html#label-Numbers\n  const decimal = '[1-9](_?[0-9])*|0';\n  const digits = '[0-9](_?[0-9])*';\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // decimal integer/float, optionally exponential or rational, optionally imaginary\n      { begin: `\\\\b(${decimal})(\\\\.(${digits}))?([eE][+-]?(${digits})|r)?i?\\\\b` },\n\n      // explicit decimal/binary/octal/hexadecimal integer,\n      // optionally rational and/or imaginary\n      { begin: \"\\\\b0[dD][0-9](_?[0-9])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[bB][0-1](_?[0-1])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[oO][0-7](_?[0-7])*r?i?\\\\b\" },\n      { begin: \"\\\\b0[xX][0-9a-fA-F](_?[0-9a-fA-F])*r?i?\\\\b\" },\n\n      // 0-prefixed implicit octal integer, optionally rational and/or imaginary\n      { begin: \"\\\\b0(_?[0-7])+r?i?\\\\b\" }\n    ]\n  };\n\n  const PARAMS = {\n    variants: [\n      {\n        match: /\\(\\)/,\n      },\n      {\n        className: 'params',\n        begin: /\\(/,\n        end: /(?=\\))/,\n        excludeBegin: true,\n        endsParent: true,\n        keywords: RUBY_KEYWORDS,\n      }\n    ]\n  };\n\n  const CLASS_DEFINITION = {\n    variants: [\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE,\n          /\\s+<\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      },\n      {\n        match: [\n          /class\\s+/,\n          CLASS_NAME_WITH_NAMESPACE_RE\n        ]\n      }\n    ],\n    scope: {\n      2: \"title.class\",\n      4: \"title.class.inherited\"\n    },\n    keywords: RUBY_KEYWORDS\n  };\n\n  const UPPER_CASE_CONSTANT = {\n    relevance: 0,\n    match: /\\b[A-Z][A-Z_0-9]+\\b/,\n    className: \"variable.constant\"\n  };\n\n  const METHOD_DEFINITION = {\n    match: [\n      /def/, /\\s+/,\n      RUBY_METHOD_RE\n    ],\n    scope: {\n      1: \"keyword\",\n      3: \"title.function\"\n    },\n    contains: [\n      PARAMS\n    ]\n  };\n\n  const OBJECT_CREATION = {\n    relevance: 0,\n    match: [\n      CLASS_NAME_WITH_NAMESPACE_RE,\n      /\\.new[ (]/\n    ],\n    scope: {\n      1: \"title.class\"\n    }\n  };\n\n  const RUBY_DEFAULT_CONTAINS = [\n    STRING,\n    CLASS_DEFINITION,\n    OBJECT_CREATION,\n    UPPER_CASE_CONSTANT,\n    METHOD_DEFINITION,\n    {\n      // swallow namespace qualifiers before symbols\n      begin: hljs.IDENT_RE + '::' },\n    {\n      className: 'symbol',\n      begin: hljs.UNDERSCORE_IDENT_RE + '(!|\\\\?)?:',\n      relevance: 0\n    },\n    {\n      className: 'symbol',\n      begin: ':(?!\\\\s)',\n      contains: [\n        STRING,\n        { begin: RUBY_METHOD_RE }\n      ],\n      relevance: 0\n    },\n    NUMBER,\n    {\n      // negative-look forward attempts to prevent false matches like:\n      // @ident@ or $ident$ that might indicate this is not ruby at all\n      className: \"variable\",\n      begin: '(\\\\$\\\\W)|((\\\\$|@@?)(\\\\w+))(?=[^@$?])' + `(?![A-Za-z])(?![@$?'])`\n    },\n    {\n      className: 'params',\n      begin: /\\|/,\n      end: /\\|/,\n      excludeBegin: true,\n      excludeEnd: true,\n      relevance: 0, // this could be a lot of things (in other languages) other than params\n      keywords: RUBY_KEYWORDS\n    },\n    { // regexp container\n      begin: '(' + hljs.RE_STARTERS_RE + '|unless)\\\\s*',\n      keywords: 'unless',\n      contains: [\n        {\n          className: 'regexp',\n          contains: [\n            hljs.BACKSLASH_ESCAPE,\n            SUBST\n          ],\n          illegal: /\\n/,\n          variants: [\n            {\n              begin: '/',\n              end: '/[a-z]*'\n            },\n            {\n              begin: /%r\\{/,\n              end: /\\}[a-z]*/\n            },\n            {\n              begin: '%r\\\\(',\n              end: '\\\\)[a-z]*'\n            },\n            {\n              begin: '%r!',\n              end: '![a-z]*'\n            },\n            {\n              begin: '%r\\\\[',\n              end: '\\\\][a-z]*'\n            }\n          ]\n        }\n      ].concat(IRB_OBJECT, COMMENT_MODES),\n      relevance: 0\n    }\n  ].concat(IRB_OBJECT, COMMENT_MODES);\n\n  SUBST.contains = RUBY_DEFAULT_CONTAINS;\n  PARAMS.contains = RUBY_DEFAULT_CONTAINS;\n\n  // >>\n  // ?>\n  const SIMPLE_PROMPT = \"[>?]>\";\n  // irb(main):001:0>\n  const DEFAULT_PROMPT = \"[\\\\w#]+\\\\(\\\\w+\\\\):\\\\d+:\\\\d+[>*]\";\n  const RVM_PROMPT = \"(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d+(p\\\\d+)?[^\\\\d][^>]+>\";\n\n  const IRB_DEFAULT = [\n    {\n      begin: /^\\s*=>/,\n      starts: {\n        end: '$',\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    },\n    {\n      className: 'meta.prompt',\n      begin: '^(' + SIMPLE_PROMPT + \"|\" + DEFAULT_PROMPT + '|' + RVM_PROMPT + ')(?=[ ])',\n      starts: {\n        end: '$',\n        keywords: RUBY_KEYWORDS,\n        contains: RUBY_DEFAULT_CONTAINS\n      }\n    }\n  ];\n\n  COMMENT_MODES.unshift(IRB_OBJECT);\n\n  return {\n    name: 'Ruby',\n    aliases: [\n      'rb',\n      'gemspec',\n      'podspec',\n      'thor',\n      'irb'\n    ],\n    keywords: RUBY_KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: [ hljs.SHEBANG({ binary: \"ruby\" }) ]\n      .concat(IRB_DEFAULT)\n      .concat(COMMENT_MODES)\n      .concat(RUBY_DEFAULT_CONTAINS)\n  };\n}\n\nmodule.exports = ruby;\n"]},"metadata":{},"sourceType":"script"}