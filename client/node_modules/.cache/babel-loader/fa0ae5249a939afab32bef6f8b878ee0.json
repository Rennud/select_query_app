{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rennud\\\\Desktop\\\\MAIN PROJ\\\\select_query_app\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\n/* Je ok struktura složek? */\n\n/* Kdy použít komponent? */\n\n/* App function handle taking data from user input \nkeeps it as a state and via fecht sends it to BE\ndata should be basic select query (SQL syntax)\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  /* Initialize State - default value empty STRING*/\n\n  /*  PROČ POUŽÍVÁM STATE A NE SOME KIND OF SELECTOR */\n  const [userQuery, setUserQuery] = useState(\"\");\n  /* Every time user change input function updates state value */\n\n  const handeOnChange = event => setUserQuery(event.target.value);\n  /* Take data from user input and send it to BE */\n\n\n  function sendQuery() {\n    /* Keeps actual input from user (It should be select query to db) */\n    const userInput = {\n      userQuery\n    };\n    /* FETCH AXIOS WEB SOCKET APOD expl. Kdy co použít proč  */\n\n    /* Je to o preferenci? */\n\n    /* Je tahle syntaxe ok? */\n\n    /* Napady na zlepšení/co nastudovat */\n\n    /* Use fetch to POST JSON-encoded data */\n\n    fetch(\"http://localhost:3001/api/get-data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userInput)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"query\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"userQuery\",\n        className: \"input-query\",\n        onChange: handeOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-query\",\n        onClick: sendQuery,\n        children: \"Get data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"e54fHDdroqUfBUEgUEoMAB+1L5U=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Rennud/Desktop/MAIN PROJ/select_query_app/client/src/App.js"],"names":["React","useState","App","userQuery","setUserQuery","handeOnChange","event","target","value","sendQuery","userInput","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B;;AACA;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;AAEA;;AACA,QAAMI,aAAa,GAAIC,KAAD,IAAWF,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAA7C;AAEA;;;AACA,WAASC,SAAT,GAAqB;AACnB;AACA,UAAMC,SAAS,GAAG;AAAEP,MAAAA;AAAF,KAAlB;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACAQ,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CC,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFiC;AAG1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;AAHoC,KAAvC,CAAL,CAKGO,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB;AACD,KARH,EASGG,KATH,CASUC,KAAD,IAAW;AAChBH,MAAAA,OAAO,CAACG,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACD,KAXH;AAYD;;AACD,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,WAFP;AAGE,QAAA,SAAS,EAAC,aAHZ;AAIE,QAAA,QAAQ,EAAEnB;AAJZ;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAQ,QAAA,SAAS,EAAC,WAAlB;AAA8B,QAAA,OAAO,EAAEI,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWS,GAXT;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAhDuBP,G;;KAAAA,G","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\n\n/* Je ok struktura složek? */\n/* Kdy použít komponent? */\n\n/* App function handle taking data from user input \nkeeps it as a state and via fecht sends it to BE\ndata should be basic select query (SQL syntax)\n*/\nexport default function App() {\n  /* Initialize State - default value empty STRING*/\n  /*  PROČ POUŽÍVÁM STATE A NE SOME KIND OF SELECTOR */\n  const [userQuery, setUserQuery] = useState(\"\");\n\n  /* Every time user change input function updates state value */\n  const handeOnChange = (event) => setUserQuery(event.target.value);\n\n  /* Take data from user input and send it to BE */\n  function sendQuery() {\n    /* Keeps actual input from user (It should be select query to db) */\n    const userInput = { userQuery };\n\n    /* FETCH AXIOS WEB SOCKET APOD expl. Kdy co použít proč  */\n    /* Je to o preferenci? */\n    /* Je tahle syntaxe ok? */\n    /* Napady na zlepšení/co nastudovat */\n\n    /* Use fetch to POST JSON-encoded data */\n    fetch(\"http://localhost:3001/api/get-data\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(userInput),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n  return (\n    <div>\n      <div className=\"query\">\n        <input\n          type=\"text\"\n          name=\"userQuery\"\n          className=\"input-query\"\n          onChange={handeOnChange}\n        />\n        <button className=\"btn-query\" onClick={sendQuery}>\n          Get data\n        </button>\n      </div>{\" \"}\n      {/* query DIV */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}